<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.alibaba.alimei.dao.IScoreLogMapper">

    <resultMap id="ScoreLogMap" type="com.alibaba.alimei.dao.vo.ScoreLog">
        <result column="user_id" property="userId" />
        <result column="function_code" property="functionCode" />
        <result column="item_score" property="itemScore" />
        <result column="function_desc" property="functionDesc" />
        <result column="id" property="id" />
        <result column="status" property="status" />
        <result column="gmt_create" property="gmtCreate" />
        <result column="gmt_modified" property="gmtModified" />
        <result column="app_name" property="appName" />
        <result column="app_parent" property="appParent" />
    </resultMap>

    <insert id="clear" useGeneratedKeys="false">
        delete from score_log where app_name = #{appName}
    </insert>

    <insert id="insert" parameterType="ScoreLog" useGeneratedKeys="false">
        insert into score_log
            (<include refid="allColumns"/>)
        values
            (#{userId}, #{functionCode}, #{itemScore}, #{functionDesc}, #{id}, #{status}, now(), now(), #{appName}, #{appParent})
    </insert>

    <insert id="insertBatch" parameterType="List" useGeneratedKeys="false">
        insert into score_log
            (<include refid="allColumns"/>)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.userId}, #{item.functionCode}, #{item.itemScore}, #{item.functionDesc}, #{item.id}, #{item.status}, now(), now(), #{item.appName}, #{item.appParent})
        </foreach>
    </insert>

    <update id="update" parameterType="ScoreLog">
        update score_log
        set gmt_modified = now(),
        <trim suffixOverrides=",">
            <if test="scoreLog.functionCode != null">function_code = #{scoreLog.functionCode},</if>
            <if test="scoreLog.itemScore != null">item_score = #{scoreLog.itemScore},</if>
            <if test="scoreLog.functionDesc != null">function_desc = #{scoreLog.functionDesc},</if>
            <if test="scoreLog.status != null">status = #{scoreLog.status},</if>
        </trim>
        where app_name = #{appName} and user_id = #{userId};
    </update>

    <update id="delete">
        update score_log
        set
            status = 1
        where
            app_name = #{appName} and user_id = #{userId};
    </update>

    <select id="get" resultMap="ScoreLogMap">
        select * from score_log
        where app_name = #{appName} and user_id = #{userId}
        limit 0, 1
    </select>

    <select id="count" parameterType="ScoreLog" resultType="int">
        select count(0) from score_log
        <where>
            <if test="userId != null">and user_id = #{userId}</if>
            <if test="functionCode != null">and function_code = #{functionCode}</if>
            <if test="itemScore != null">and item_score = #{itemScore}</if>
            <if test="functionDesc != null">and function_desc = #{functionDesc}</if>
            <if test="status != null">and status = #{status}</if>
            <if test="appName != null">and app_name = #{appName}</if>
            <if test="appParent != null">and app_parent = #{appParent}</if>
        </where>
    </select>

    <select id="list" parameterType="Map" resultMap="ScoreLogMap">
        select * from score_log
        <if test="scoreLog != null">
            <where>
                <if test="scoreLog.userId != null">and user_id = #{scoreLog.userId}</if>
                <if test="scoreLog.functionCode != null">and function_code = #{scoreLog.functionCode}</if>
                <if test="scoreLog.itemScore != null">and item_score = #{scoreLog.itemScore}</if>
                <if test="scoreLog.functionDesc != null">and function_desc = #{scoreLog.functionDesc}</if>
                <if test="scoreLog.status != null">and status = #{scoreLog.status}</if>
                <if test="scoreLog.appName != null">and app_name = #{scoreLog.appName}</if>
                <if test="scoreLog.appParent != null">and app_parent = #{scoreLog.appParent}</if>
            </where>
        </if>
        limit #{offset}, #{length}
    </select>

    <sql id="allColumns">
        user_id, function_code, item_score, function_desc,  id, status, gmt_create, gmt_modified, app_name, app_parent
    </sql>

    <select id="listByLoginId" resultMap="ScoreLogMap">
        select sl.*
        from
        (select * from account where loginid = #{loginId} and status = '0' and app_name = #{appName}) a
        ,(select * from user where status = '0' and app_name = #{appName}) u
        ,(select * from score_log where status = '0' and app_name = #{appName}) sl
        where  a.id = u.account_id and u.id = sl.user_id
        order by sl.gmt_modified desc
        limit #{offset}, #{length}
    </select>

    <select id="countByLoginId" resultType="int">
        select count(0)
        from
        (select * from account where loginid = #{loginId} and status = '0' and app_name = #{appName}) a
        ,(select * from user where status = '0' and app_name = #{appName}) u
        ,(select * from score_log where status = '0' and app_name = #{appName}) sl
        where  a.id = u.account_id and u.id = sl.user_id
    </select>

</mapper>